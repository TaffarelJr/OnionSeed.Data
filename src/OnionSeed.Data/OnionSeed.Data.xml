<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OnionSeed.Data</name>
    </assembly>
    <members>
        <member name="T:OnionSeed.Types.IEntity`1">
            <summary>
            Defines an object that is not fundamentally identified by its attributes, but rather by a unique identity value.
            </summary>
            <typeparam name="TIdentity">The type of the unique identity value.</typeparam>
            <remarks>Entities are not defined primarily by their attributes.
            They represent a thread of identity that runs through time and often across distinct representations.
            Sometimes an entity must be matched with another entity even though their attributes differ.
            Sometimes an entity must be distinguished from other entities even though their attributes are the same.
            Mistaken identity in these cases can lead to data corruption; thus, a unique identity value is created
            for the entity so it can be tracked regardless of the state of its attributes.</remarks>
        </member>
        <member name="P:OnionSeed.Types.IEntity`1.Id">
            <summary>
            Gets the unique identity value.
            </summary>
        </member>
        <member name="T:OnionSeed.Types.IWritableEntity`1">
            <inheritdoc />
            <summary>
            Represents an entity in a state where it's unique identity value can be set
            (for example, when creating a new instance or re-hydrating an instance from a data store).
            </summary>
        </member>
        <member name="P:OnionSeed.Types.IWritableEntity`1.Id">
            <summary>
            Gets or sets the unique identity value.
            </summary>
        </member>
    </members>
</doc>
